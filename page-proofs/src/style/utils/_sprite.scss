// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$ico-lm-1-name: 'ico-lm-1';
$ico-lm-1-x: 0px;
$ico-lm-1-y: 0px;
$ico-lm-1-offset-x: 0px;
$ico-lm-1-offset-y: 0px;
$ico-lm-1-width: 132px;
$ico-lm-1-height: 92px;
$ico-lm-1-total-width: 322px;
$ico-lm-1-total-height: 274px;
$ico-lm-1-image: '../img/sprite/sprite.png';
$ico-lm-1: (0px, 0px, 0px, 0px, 132px, 92px, 322px, 274px, '../img/sprite/sprite.png', 'ico-lm-1', );
$ico-lm-2-name: 'ico-lm-2';
$ico-lm-2-x: 0px;
$ico-lm-2-y: 92px;
$ico-lm-2-offset-x: 0px;
$ico-lm-2-offset-y: -92px;
$ico-lm-2-width: 105px;
$ico-lm-2-height: 90px;
$ico-lm-2-total-width: 322px;
$ico-lm-2-total-height: 274px;
$ico-lm-2-image: '../img/sprite/sprite.png';
$ico-lm-2: (0px, 92px, 0px, -92px, 105px, 90px, 322px, 274px, '../img/sprite/sprite.png', 'ico-lm-2', );
$ico-lm-3-name: 'ico-lm-3';
$ico-lm-3-x: 132px;
$ico-lm-3-y: 0px;
$ico-lm-3-offset-x: -132px;
$ico-lm-3-offset-y: 0px;
$ico-lm-3-width: 107px;
$ico-lm-3-height: 92px;
$ico-lm-3-total-width: 322px;
$ico-lm-3-total-height: 274px;
$ico-lm-3-image: '../img/sprite/sprite.png';
$ico-lm-3: (132px, 0px, -132px, 0px, 107px, 92px, 322px, 274px, '../img/sprite/sprite.png', 'ico-lm-3', );
$ico-lm-4-name: 'ico-lm-4';
$ico-lm-4-x: 239px;
$ico-lm-4-y: 0px;
$ico-lm-4-offset-x: -239px;
$ico-lm-4-offset-y: 0px;
$ico-lm-4-width: 83px;
$ico-lm-4-height: 92px;
$ico-lm-4-total-width: 322px;
$ico-lm-4-total-height: 274px;
$ico-lm-4-image: '../img/sprite/sprite.png';
$ico-lm-4: (239px, 0px, -239px, 0px, 83px, 92px, 322px, 274px, '../img/sprite/sprite.png', 'ico-lm-4', );
$ico-lm-5-name: 'ico-lm-5';
$ico-lm-5-x: 0px;
$ico-lm-5-y: 182px;
$ico-lm-5-offset-x: 0px;
$ico-lm-5-offset-y: -182px;
$ico-lm-5-width: 82px;
$ico-lm-5-height: 92px;
$ico-lm-5-total-width: 322px;
$ico-lm-5-total-height: 274px;
$ico-lm-5-image: '../img/sprite/sprite.png';
$ico-lm-5: (0px, 182px, 0px, -182px, 82px, 92px, 322px, 274px, '../img/sprite/sprite.png', 'ico-lm-5', );
$spritesheet-width: 322px;
$spritesheet-height: 274px;
$spritesheet-image: '../img/sprite/sprite.png';
$spritesheet-sprites: ($ico-lm-1, $ico-lm-2, $ico-lm-3, $ico-lm-4, $ico-lm-5, );
$spritesheet: (322px, 274px, '../img/sprite/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
